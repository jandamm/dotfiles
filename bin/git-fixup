#!/usr/bin/env bash

set -e

function get_sha() {
	[ "$1" ] && echo "$1"
}

function has_branch() {
	git show-branch "$1" &>/dev/null
}

if [ "$1" = 'apply' ]; then
	shift

	# TODO: cleanup
	# TODO: preselect oldest not pushed commit (if no sha is provided)

	# $ as parameter selects the current upstream branch
	if [ "$1" = "$" ]
	then
		shift
		branch="$(git remote | head -n 1)/$(git branch --show-current)"
		if has_branch "$branch"
		then
			sha="$branch"
		fi
	fi

	if [ -z "$sha" ]; then
		sha=$(get_sha "$@" || git logf --prompt='Fixup> ' --header='Select the oldest commit before a fixed commit.')
	fi

	GIT_SEQUENCE_EDITOR=true git rebase --interactive --autosquash "${sha%% *}"
	exit
fi

sha=$(get_sha "$@" || git logf --prompt='Fixup> ')

git commit --fixup "${sha%% *}"
